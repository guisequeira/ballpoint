// Generated by CoffeeScript 1.6.3
'use strict';
/**
 # @ngdoc overview
 # @name bicseApp
 # @description
 # # bicseApp
 #




 resolve:
          "testeResolve" : ($q, $timeout) ->
            deferred = $q.defer()
            $timeout ->
              deferred.resolve
                teste: ()->
                  return "sa porra funcionou"
            , 5000
            return deferred.promise




 # Main module of the application.
*/

var el, overlay, _closed, _opemClass, _opening;

overlay = $('#overlay');

_closed = 'closed';

_opening = 'opening';

angular.module('bicseApp', ['ngAnimate', 'ngCookies', 'ngResource', 'ngRoute', 'ngSanitize', 'ngTouch']).config(function($routeProvider, $locationProvider) {
  return $routeProvider.when("/minha-bic/:id", {
    templateUrl: 'views/templates/minha-bic.html',
    controller: 'MinhaBicCtrl'
  }).when('/', {
    templateUrl: 'views/templates/video-intro.html',
    controller: 'VideoIntroCtrl'
  }).when('/home', {
    templateUrl: 'views/templates/home.html',
    controller: 'HomeCtrl'
  }).when('/comoparticipar', {
    templateUrl: 'views/templates/comoparticipar.html',
    controller: 'ComoParticiparCtrl'
  }).when('/crie-sua-bic', {
    templateUrl: 'views/templates/customizacao.html',
    controller: 'CrieSuaBicCtrl'
  }).when('/video-bic', {
    templateUrl: 'views/templates/customizacao-video.html',
    controller: 'VideoBicCtrl'
  }).when('/premios', {
    templateUrl: 'views/templates/premios.html',
    controller: 'PremiosCtrl'
  }).when('/galeria', {
    templateUrl: 'views/templates/galeria.html',
    controller: 'GaleriaCtrl'
  }).when('/cadastro', {
    templateUrl: 'views/templates/cadastro.html',
    controller: 'CadastroCtrl'
  }).otherwise({
    redirectTo: '/home'
  });
});

angular.module('bicseApp').run(function($rootScope, $timeout, $location) {
  var timeoutEnter;
  timeoutEnter = null;
  $rootScope.UserCuston = {
    pen_id: null,
    vote: {
      blogger_id: null
    },
    user: {
      name: null,
      email: null,
      cpf: null,
      address: null,
      num: null,
      phone: null,
      neighborhood: null,
      city: null,
      state: '-',
      accepted_terms: true,
      zip_code: null,
      complement: null,
      facebook_id: null,
      twitter_id: null,
      googleplus_id: null
    },
    pen: {
      name: '',
      text: '',
      no_apply_text: false,
      body_id: null,
      nib_id: null,
      cover_id: null,
      capful_id: null,
      text_id: null
    },
    images: {
      body: {
        image_url: null,
        hexa: null
      },
      nib: {
        image_url: null,
        hexa: null
      },
      cover: {
        image_url: null,
        hexa: null
      },
      capful: {
        image_url: null,
        hexa: null
      },
      text: {
        hexa: null
      }
    }
  };
  $rootScope.startTimeEnter = function(delay) {
    if (timeoutEnter !== null) {
      $timeout.cancel(timeoutEnter);
    }
    return timeoutEnter = $timeout(function() {
      $timeout.cancel(timeoutEnter);
      return $('.section').removeClass('enter');
    }, delay);
  };
  $rootScope.isMobile = {
    Android: function() {
      return navigator.userAgent.match(/Android/i);
    },
    BlackBerry: function() {
      return navigator.userAgent.match(/BlackBerry/i);
    },
    iOS: function() {
      return navigator.userAgent.match(/iPhone|iPad|iPod/i);
    },
    Opera: function() {
      return navigator.userAgent.match(/Opera Mini/i);
    },
    Windows: function() {
      return navigator.userAgent.match(/IEMobile/i);
    },
    any: function() {
      return $rootScope.isMobile.Android() || $rootScope.isMobile.BlackBerry() || $rootScope.isMobile.iOS() || $rootScope.isMobile.Opera() || $rootScope.isMobile.Windows();
    }
  };
  $rootScope.defineDevice = function() {
    var device;
    device = 'desktop';
    if ($rootScope.isMobile.any() !== null) {
      device = 'mobile';
    }
    return device;
  };
  $rootScope.delayOut = 1500;
  $rootScope.moclosed;
  $rootScope.navMainIsOpem = false;
  $rootScope.navSocialIsOpem = false;
  $rootScope.modalStatus = _closed;
  $rootScope.feedbackStatus = _closed;
  return $rootScope.createMotio = function(element, _frames, fcnCall) {
    var mt, _FPS;
    if (fcnCall == null) {
      fcnCall = null;
    }
    if (_frames === void 0) {
      _frames = $(element).attr('data-frames');
    }
    _FPS = 18;
    mt = new Motio(element, {
      fps: _FPS,
      frames: _frames
    });
    return mt.toEnd(function() {
      if (fcnCall !== null) {
        fcnCall.call();
      }
      return mt.destroy();
    });
  };
});

angular.module('bicseApp').run(function($rootScope, $timeout, $location) {
  var new_h;
  $rootScope.link_skip = '/home';
  $rootScope.baseURL = $('base').attr('href');
  $rootScope.loading = function() {
    $('#loader').addClass('show');
    $('.main').css('display', 'none');
    return $('.section').removeClass('enter');
  };
  $rootScope.loaded = function() {
    return $timeout((function() {
      $('#loader').removeClass('show');
      $('.main').css('display', 'block');
      return $('.section').addClass('enter');
    }), 800);
  };
  $rootScope.opemFeedback = function() {
    return $rootScope.feedbackStatus = _opening;
  };
  $rootScope.changeRoute = function(route, $event) {
    $rootScope.closeModal($event);
    $rootScope.navMainIsOpem = false;
    $rootScope.navSocialIsOpem = false;
    $event.preventDefault();
    if ($location.path() === route) {
      return;
    } else {
      $('.nav-main .overlay').removeClass('active');
      $('#overlay').removeClass('active');
      $('.nav-main').removeClass('opem');
      $('.section').addClass('leave');
    }
    $timeout((function() {
      $rootScope.link_skip = $location.path();
      return $location.path(route);
    }), $rootScope.delayOut);
  };
  require.config({
    waitSeconds: 10,
    paths: {
      image: $('base').attr('href') + "javascripts/image"
    }
  });
  new_h = $(window).height() - 380;
  $('.container-scroll').css('height', new_h);
  $rootScope.isHome = true;
  $rootScope.$on('$routeChangeStart', function(angularEvent, curr, prev) {
    $rootScope.loading();
    return angularEvent.preventDefault();
  });
  return $rootScope.$on('$routeChangeSuccess', function(e, curr, prev) {
    $rootScope.app_section = Boolean(curr.$$route.originalPath === '/');
    return $rootScope.loading();
  });
});

/* --------------------------------------------
     Begin main.coffee
--------------------------------------------
*/


'use strict';

/**
 # @ngdoc function
 # @name bicseApp.controller:MainCtrl
 # @description
 # # MainCtrl
 # Controller of the bicseApp
*/


angular.module('bicseApp').controller('MainCtrl', function($scope, $rootScope) {
  return $scope.awesomeThings = ['HTML5 Boilerplate', 'AngularJS', 'Karma'];
});

/* --------------------------------------------
     Begin about.coffee
--------------------------------------------
*/


'use strict';

/**
 # @ngdoc function
 # @name bicseApp.controller:AboutCtrl
 # @description
 # # AboutCtrl
 # Controller of the bicseApp
*/


angular.module('bicseApp').controller('AboutCtrl', function($rootScope) {
  return $rootScope.isHome = false;
});

/* --------------------------------------------
     Begin header.coffee
--------------------------------------------
*/


'use strict';

/**
 # @ngdoc directive
 # @name bicseApp.directive:header
 # @description
 # # header
*/


_opemClass = 'opem';

overlay = $('#overlay');

angular.module('bicseApp').directive('mainHeader', function($rootScope) {
  return {
    restrict: 'A',
    templateUrl: 'views/commom/header.html',
    replace: true,
    link: function(scope, element, attrs) {
      $rootScope.navMainIsOpem = false;
      $rootScope.navSocialIsOpem = false;
      return scope.toggleNav = function(nav) {
        var newH;
        if (nav === 'social') {
          if ($rootScope.navSocialIsOpem) {
            return $rootScope.navSocialIsOpem = false;
          } else {
            return $rootScope.navSocialIsOpem = true;
          }
        } else if (nav === 'main') {
          if ($rootScope.navMainIsOpem) {
            return $rootScope.navMainIsOpem = false;
          } else {
            newH = $(window).height();
            if (newH < 710) {
              newH = 710;
            }
            $('.nav-main ul').css('height', newH + 'px');
            return $rootScope.navMainIsOpem = true;
          }
        }
      };
    }
  };
});

/* --------------------------------------------
     Begin home.coffee
--------------------------------------------
*/


'use strict';

/**
 # @ngdoc function
 # @name bicseApp.controller:HomeCtrl
 # @description
 # # HomeCtrl
 # Controller of the bicseApp
*/


angular.module('bicseApp').controller('HomeCtrl', function($scope, $rootScope, $animate) {
  var arr_bloggers, initPage, temparr_bloggers, _FPS, _bloggers, _motioBloggers;
  arr_bloggers = ['cid', 'pc', 'kefera'];
  temparr_bloggers = arr_bloggers.slice(0);
  $rootScope.loading();
  $rootScope.delayOut = 1200;
  _FPS = 18;
  _motioBloggers = [];
  $scope.motio_cid = null;
  _bloggers = {
    all: {
      element: $('.blogger'),
      timeout: void 0
    },
    cid: {
      intro: $('.persons .cid.intro'),
      loop: $('.persons .cid.loop'),
      action: $('.persons .cid.action'),
      interval: void 0,
      timeout: void 0,
      frames: {
        intro: 15,
        loop: 20,
        action1: 26,
        action2: 31
      }
    },
    pc: {
      intro: $('.persons .pc.intro'),
      loop: $('.persons .pc.loop'),
      action: $('.persons .pc.action'),
      interval: void 0,
      timeout: void 0,
      frames: {
        intro: 15,
        loop: 20,
        action1: 26,
        action2: 31
      }
    },
    kefera: {
      intro: $('.persons .kefera.intro'),
      loop: $('.persons .kefera.loop'),
      action: $('.persons .kefera.action'),
      interval: void 0,
      timeout: void 0,
      frames: {
        intro: 15,
        loop: 20,
        action1: 26,
        action2: 31
      }
    }
  };
  $rootScope.isHome = true;
  $rootScope.app_section = $rootScope.pageClass = 'home';
  _bloggers.all.element.hide();
  $scope.clearIntervals = function(interval) {
    if (interval !== void 0) {
      return clearInterval(interval);
    }
  };
  $scope.clearTimeouts = function(timeout) {
    if (timeout !== void 0) {
      return clearInterval(timeout);
    }
  };
  $scope.startAction = function() {
    var blogger, x;
    $scope.destroyMotios();
    x = Math.floor(Math.random() * temparr_bloggers.length);
    blogger = temparr_bloggers[x];
    temparr_bloggers.splice(x, 1);
    if (temparr_bloggers.length === 0) {
      temparr_bloggers = arr_bloggers.slice(0);
    }
    return $scope.motioBloggersToAction(blogger);
  };
  $scope.motioBloggersToAction = function(bloggers) {
    var motio, _frames;
    if (bloggers === 'cid') {
      _frames = 31;
    } else if (bloggers === 'pc') {
      _frames = 26;
    } else {
      _frames = 31;
    }
    _bloggers[bloggers].intro.hide();
    _bloggers[bloggers].action.show();
    motio = new Motio(_bloggers[bloggers].action[0], {
      fps: 18,
      frames: _frames
    });
    _motioBloggers.push(motio);
    return motio.toEnd(function() {
      _bloggers[bloggers].intro.show();
      _bloggers[bloggers].action.hide();
      motio.destroy();
      return _bloggers.all.timeout = setTimeout($scope.startAction, 2000);
    });
  };
  $scope.startLooping = function() {
    $scope.destroyMotios();
    $scope.motioBloggersToLooping('cid');
    $scope.motioBloggersToLooping('pc');
    $scope.motioBloggersToLooping('kefera');
    $scope.clearTimeouts(_bloggers.all.timeout);
    return _bloggers.all.timeout = setTimeout($scope.startAction, 5000);
  };
  $scope.motioBloggersToLooping = function(bloggers) {
    var motio;
    _bloggers[bloggers].action1.hide();
    _bloggers[bloggers].loop.show();
    motio = new Motio(_bloggers[bloggers].loop[0], {
      fps: 18,
      frames: 17
    });
    motio.toEnd();
    return _motioBloggers.push(motio);
  };
  $scope.startIntro = function() {
    var images_actions, _frames_intro;
    _frames_intro = 15;
    _FPS = 18;
    $scope.clearTimeouts(_bloggers.all.timeout);
    $scope.motioBloggersToIntro('cid', 500, _frames_intro);
    $scope.motioBloggersToIntro('pc', 1200, _frames_intro);
    $scope.motioBloggersToIntro('kefera', 1900, _frames_intro);
    images_actions = ["image!" + $rootScope.baseURL + "images/persons/cid/cid-action2.png", "image!" + $rootScope.baseURL + "images/persons/pc/pc-action1.png", "image!" + $rootScope.baseURL + "images/persons/kefera/kefera-action3.png"];
    return require(images_actions, function() {
      return _bloggers.all.timeout = setTimeout($scope.startAction, 5000);
    });
  };
  $scope.motioBloggersToIntro = function(bloggers, delay, frames) {
    return _bloggers[bloggers].timeout = setTimeout((function() {
      var motio;
      _bloggers[bloggers].intro.show();
      motio = new Motio(_bloggers[bloggers].intro[0], {
        fps: _FPS,
        frames: frames
      });
      motio.toEnd();
      return _motioBloggers.push(motio);
    }), delay);
  };
  $scope.sortBlogger = function() {
    var blogger, x;
    x = Math.floor(Math.random() * temparr_bloggers.length);
    blogger = temparr_bloggers[x];
    _bloggers.all.element.hide();
    $scope.motioBloggersToIntro(blogger, 100, 15);
    temparr_bloggers.splice(x, 1);
    if (temparr_bloggers.length === 0) {
      temparr_bloggers = arr_bloggers.slice(0);
    }
    return _bloggers.all.timeout = setTimeout(function() {
      $scope.clearTimeouts(_bloggers.all.timeout);
      return $scope.sortBlogger();
    }, 3000);
  };
  $scope.destroyMotios = function() {
    var mb, _i, _len, _results;
    _results = [];
    for (_i = 0, _len = _motioBloggers.length; _i < _len; _i++) {
      mb = _motioBloggers[_i];
      _results.push(mb.destroy());
    }
    return _results;
  };
  $scope.dispose = function() {
    _bloggers.all.element.hide();
    $scope.destroyMotios();
    $scope.clearTimeouts(_bloggers.all.timeout);
    $scope.clearIntervals(_bloggers.cid.interval);
    $scope.clearIntervals(_bloggers.pc.interval);
    $scope.clearIntervals(_bloggers.kefera.interval);
    $scope.clearTimeouts(_bloggers.cid.timeout);
    $scope.clearTimeouts(_bloggers.pc.timeout);
    return $scope.clearTimeouts(_bloggers.kefera.timeout);
  };
  initPage = function() {
    return setTimeout((function() {
      $('.section.home').removeClass('enter');
      if ($rootScope.defineDevice() === 'desktop') {
        return $scope.startIntro();
      } else {
        _bloggers.all.element.addClass('small');
        return $scope.sortBlogger();
      }
    }), 2500);
  };
  $scope.images_desktop = ["image!" + $rootScope.baseURL + "images/templates/home/bg-base.png", "image!" + $rootScope.baseURL + "images/templates/home/caneta-frente.png", "image!" + $rootScope.baseURL + "images/templates/home/caneta-fundo.png", "image!" + $rootScope.baseURL + "images/templates/home/grafismo-center.png", "image!" + $rootScope.baseURL + "images/templates/home/grafismo-left.png", "image!" + $rootScope.baseURL + "images/templates/home/grafismo-right.png", "image!" + $rootScope.baseURL + "images/templates/home/grafismo.png", "image!" + $rootScope.baseURL + "images/templates/home/tampa-azul.png", "image!" + $rootScope.baseURL + "images/templates/home/tampa-vermelha.png", "image!" + $rootScope.baseURL + "images/persons/cid/cid-intro.png", "image!" + $rootScope.baseURL + "images/persons/pc/pc-intro.png", "image!" + $rootScope.baseURL + "images/persons/kefera/kefera-intro.png"];
  $scope.images_mobile = ["image!" + $rootScope.baseURL + "images/persons/cid/cid-intro.png", "image!" + $rootScope.baseURL + "images/persons/pc/pc-intro.png", "image!" + $rootScope.baseURL + "images/persons/kefera/kefera-intro.png", "image!" + $rootScope.baseURL + "images/templates/home/bg-mobile.png"];
  $scope.images_manifest = $scope.images_desktop;
  $scope.images_manifest = $scope.images_mobile;
  require($scope.images_manifest, function() {
    $rootScope.loaded();
    return initPage();
  });
  return $scope.$on('$destroy', function() {
    return $scope.dispose();
  });
});

/* --------------------------------------------
     Begin comoparticipar.coffee
--------------------------------------------
*/


'use strict';

/**
 # @ngdoc function
 # @name bicseApp.controller:ComoparticiparCtrl
 # @description
 # # ComoparticiparCtrl
 # Controller of the bicseApp
*/


angular.module('bicseApp').controller('ComoParticiparCtrl', function($scope, $rootScope, $timeout, $interval) {
  var bloggers, carousel, changeCarousel, getCurentPanelIndex, initPage, intervalId, showBlogger, sortBlogger, startTimeout, temp_bloggers, timeoutId;
  intervalId = null;
  timeoutId = null;
  bloggers = ['cid', 'pc', 'kefera'];
  carousel = null;
  temp_bloggers = bloggers.slice(0);
  $rootScope.delayOut = 800;
  $rootScope.isHome = false;
  $rootScope.pageClass = 'como-participar';
  $scope.clickSubNav = function(index) {
    $('.subnav').find('li a.active').removeClass('active');
    return carousel.showPane(index);
  };
  getCurentPanelIndex = function() {
    var index;
    index = -1;
    $('.subnav').find('li a').each(function(value, key) {
      if ($(this).hasClass('active')) {
        return index = value;
      }
    });
    return index;
  };
  changeCarousel = function(panel) {
    $('.blogger').hide();
    $('.box.first .wrap').hide();
    $('.box.second .wrap').hide();
    $('.box.third .wrap').hide();
    $('.box.third .wrap').find('img').addClass('no-delay');
    $('.box.third .wrap').find('.infos').addClass('no-delay');
    $('.box.second .wrap').find('.infos').addClass('no-delay');
    $timeout.cancel(timeoutId);
    return timeoutId = $timeout(function() {
      if (getCurentPanelIndex() === 0) {
        return $('.box.first .wrap').show();
      } else if (getCurentPanelIndex() === 1) {
        sortBlogger();
        return $('.box.second .wrap').show();
      } else if (getCurentPanelIndex() === 2) {
        return $('.box.third .wrap').show();
      }
    }, 400);
  };
  showBlogger = function(blogger) {
    var motio;
    $('.blogger').show();
    $('.blogger.intro').removeClass('pc cid kefera');
    $('.blogger.intro').addClass(blogger);
    motio = new Motio($('.blogger.intro')[0], {
      fps: 18,
      frames: 15
    });
    return motio.toEnd(function() {
      return startTimeout();
    });
  };
  sortBlogger = function() {
    var x;
    x = Math.floor(Math.random() * temp_bloggers.length);
    showBlogger(temp_bloggers[x]);
    temp_bloggers.splice(x, 1);
    if (temp_bloggers.length === 0) {
      return temp_bloggers = bloggers.slice(0);
    }
  };
  startTimeout = function() {
    $timeout.cancel(timeoutId);
    return timeoutId = $timeout(sortBlogger, 4000);
  };
  initPage = function() {
    $('.blogger').hide();
    $('.box.first .wrap').hide();
    $('.box.second .wrap').hide();
    $('.box.third .wrap').hide();
    return timeoutId = $timeout(function() {
      $timeout.cancel(timeoutId);
      if ($rootScope.defineDevice() === 'mobile') {
        carousel = new Carousel('#container-slide', '.box', changeCarousel);
        carousel.init();
        $('.box.first .wrap').show();
      } else {
        $('.blogger').hide();
        $('.box.first .wrap').show();
        $('.box.second .wrap').show();
        $('.box.third .wrap').show();
        timeoutId = $timeout(function() {
          $timeout.cancel(timeoutId);
          return sortBlogger();
        }, 850);
      }
    }, 1800);
  };
  $scope.$on("$destroy", function() {
    $interval.cancel(intervalId);
    return $timeout.cancel(timeoutId);
  });
  return require(["image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-left-1.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-left-2.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-left-3.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-left.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-right-1.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-right-2.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-right-3.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-right.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/caneta-1.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/caneta-2.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/galao.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/gota.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/like.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/tampa-1.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/tampa-2.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/tampa-3.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/tampa.png!bust"], function() {
    $rootScope.loaded();
    initPage();
  });
});

/* --------------------------------------------
     Begin criesuabic.coffee
--------------------------------------------
*/


'use strict';

/**
 # @ngdoc function
 # @name bicseApp.controller:CriesuabicCtrl
 # @description
 # # CriesuabicCtrl
 # Controller of the bicseApp
*/


angular.module('bicseApp').controller('CrieSuaBicCtrl', function($scope, $rootScope, PartsService) {
  $rootScope.isHome = false;
  $rootScope.pageClass = 'customizacao';
  $scope.myText = {
    color: '#000000'
  };
  $scope.textColor = '#FFFFFF';
  $scope.imputText = '';
  $scope.nameUser = '';
  $scope.namePen = 'Texto da caneta';
  $scope.textInPen = !$rootScope.UserCuston.pen.no_apply_text;
  $scope.isShowController = false;
  $scope.showTxt = true;
  $scope.userPen = {
    ids: {
      body_id: null,
      nib_id: null,
      cover_id: null,
      capful_id: null
    }
  };
  $scope.pen = {
    images: {
      tampinha: 'images/parts/tampinha/1069c9.png',
      corpo: 'images/parts/corpo/ffffff.png',
      ponta: 'images/parts/ponta/ponta-0-8/043464.png',
      tampa: 'images/parts/tampa/1069c9.png'
    },
    colors: {
      tampinha: null,
      corpo: null,
      ponta: null,
      tampa: null,
      texto: null
    }
  };
  $scope.cores = null;
  $scope.controllers = ['tampa', 'corpo', 'tampinha', 'ponta', 'texto'];
  if ($rootScope.UserCuston.images.capful.image_url !== null) {
    $scope.pen.images.tampinha = $rootScope.UserCuston.images.capful.image_url;
  }
  if ($rootScope.UserCuston.images.body.image_url !== null) {
    $scope.pen.images.corpo = $rootScope.UserCuston.images.body.image_url;
  }
  if ($rootScope.UserCuston.images.nib.image_url !== null) {
    $scope.pen.images.ponta = $rootScope.UserCuston.images.nib.image_url;
  }
  if ($rootScope.UserCuston.images.cover.image_url !== null) {
    $scope.pen.images.tampa = $rootScope.UserCuston.images.cover.image_url;
  }
  if ($rootScope.UserCuston.images.capful.hexa !== null) {
    $scope.pen.colors.tampinha = $rootScope.UserCuston.images.capful.hexa;
  }
  if ($rootScope.UserCuston.images.body.hexa !== null) {
    $scope.pen.colors.corpo = $rootScope.UserCuston.images.body.hexa;
  }
  if ($rootScope.UserCuston.images.nib.hexa !== null) {
    $scope.pen.colors.ponta = $rootScope.UserCuston.images.nib.hexa;
  }
  if ($rootScope.UserCuston.images.cover.hexa !== null) {
    $scope.pen.colors.tampa = $rootScope.UserCuston.images.cover.hexa;
  }
  if ($rootScope.UserCuston.images.text.hexa !== null) {
    $scope.pen.colors.texto = $rootScope.UserCuston.images.text.hexa;
    $scope.textColor = $scope.pen.colors.texto;
    $scope.myText = {
      color: $scope.pen.colors.texto
    };
  }
  $scope.myBackground = function(slug) {
    return {
      'background-color': $scope.pen.colors[slug]
    };
  };
  $scope.changeNameUser = function() {
    return $rootScope.UserCuston.user.name = $scope.nameUser;
  };
  $scope.changeInput = function(str) {
    if (str.length > 0) {
      $scope.namePen = str;
      return $rootScope.UserCuston.pen.text = $scope.namePen;
    } else {
      return $scope.namePen = 'Texto da caneta';
    }
  };
  $scope.hideControllers = function() {
    return $scope.isShowController = false;
  };
  $scope.controllerSelected = function(controller) {
    switch (controller) {
      case 'tampa':
        if (Boolean($rootScope.UserCuston.pen.cover_id !== null)) {
          return "selected";
        } else {
          if ($scope.controller_type === controller) {
            return "active";
          }
        }
        break;
      case 'ponta':
        if (Boolean($rootScope.UserCuston.pen.nib_id !== null)) {
          return "selected";
        } else {
          if ($scope.controller_type === controller) {
            return "active";
          }
        }
        break;
      case 'corpo':
        if (Boolean($rootScope.UserCuston.pen.body_id !== null)) {
          return "selected";
        } else {
          if ($scope.controller_type === controller) {
            return "active";
          }
        }
        break;
      case 'tampinha':
        if (Boolean($rootScope.UserCuston.pen.capful_id !== null)) {
          return "selected";
        } else {
          if ($scope.controller_type === controller) {
            return "active";
          }
        }
    }
  };
  $scope.changePen = function(color) {
    $scope.isShowController = false;
    switch ($scope.controller_type) {
      case 'tampa':
        $scope.pen.images.tampa = color.image_url;
        $scope.pen.colors.tampa = color.hexa;
        $rootScope.UserCuston.pen.cover_id = color.id;
        $rootScope.UserCuston.images.cover.hexa = color.hexa;
        $rootScope.UserCuston.images.cover.image_url = color.image_url;
        return $rootScope.UserCuston.images.cover.image_vertical_url = color.image_vertical_url;
      case 'ponta':
        $scope.pen.images.ponta = color.image_url;
        $scope.pen.colors.ponta = color.hexa;
        $rootScope.UserCuston.pen.nib_id = color.id;
        $rootScope.UserCuston.images.nib.hexa = color.hexa;
        $rootScope.UserCuston.images.nib.image_url = color.image_url;
        return $rootScope.UserCuston.images.nib.image_vertical_url = color.image_vertical_url;
      case 'corpo':
        $scope.pen.images.corpo = color.image_url;
        $scope.pen.colors.corpo = color.hexa;
        $rootScope.UserCuston.pen.body_id = color.id;
        $rootScope.UserCuston.images.body.hexa = color.hexa;
        $rootScope.UserCuston.images.body.image_url = color.image_url;
        return $rootScope.UserCuston.images.body.image_vertical_url = color.image_vertical_url;
      case 'tampinha':
        $scope.pen.images.tampinha = color.image_url;
        $scope.pen.colors.tampinha = color.hexa;
        $rootScope.UserCuston.pen.capful_id = color.id;
        $rootScope.UserCuston.images.capful.hexa = color.hexa;
        $rootScope.UserCuston.images.capful.image_url = color.image_url;
        return $rootScope.UserCuston.images.capful.image_vertical_url = color.image_vertical_url;
      case 'texto':
        $rootScope.UserCuston.images.text.hexa = color.hexa;
        $scope.pen.colors.texto = color.hexa;
        $rootScope.UserCuston.pen.text_id = color.id;
        $scope.textColor = color.hexa;
        return $scope.myText = {
          color: color.hexa
        };
    }
  };
  $scope.clickPart = function(part) {
    if ($(window).width() < 1025) {
      $scope.isShowController = true;
    }
    return $scope.selectPart(part);
  };
  $scope.selectPart = function(part) {
    $scope.controller_type = part.slug;
    if (part.subparts.length > 0) {
      return $scope.getPart(part.subparts[0].id);
    } else {
      return $scope.getPart(part.id);
    }
  };
  $scope.toggleText = function() {
    if ($scope.textInPen) {
      $scope.textInPen = false;
    } else {
      $scope.textInPen = true;
    }
    return $rootScope.UserCuston.pen.no_apply_text = !$scope.textInPen;
  };
  $scope.getPart = function(id) {
    return PartsService.get({
      id: id
    }, function(part) {
      return $scope.cores = part.colors;
    });
  };
  $scope.opemDropDown = function() {
    return $scope.isOpem = true;
  };
  $scope.closeDropDown = function(part) {
    $scope.isOpem = false;
    if (part === null) {
      return;
    }
    $scope.labelDropDown = part.name.split(' ')[0];
    $scope.labelMM = part.name.split(' ')[1];
    return $scope.getPart(part.id);
  };
  $scope.verifyNext = function() {
    var init_value, min_value;
    min_value = 5;
    if (!$scope.textInPen) {
      min_value = 4;
    }
    init_value = 0;
    if ($rootScope.UserCuston.pen.body_id !== null) {
      init_value += 1;
    }
    if ($rootScope.UserCuston.pen.nib_id !== null) {
      init_value += 1;
    }
    if ($rootScope.UserCuston.pen.cover_id !== null) {
      init_value += 1;
    }
    if ($rootScope.UserCuston.pen.capful_id !== null) {
      init_value += 1;
    }
    if ($rootScope.UserCuston.pen.text.length > 0) {
      init_value += 1;
    }
    return Boolean(init_value >= min_value);
  };
  return require(["image!" + $rootScope.baseURL + "images/templates/home/bg-base.png!bust", "image!" + $rootScope.baseURL + "images/templates/home/caneta-frente.png!bust", "image!" + $rootScope.baseURL + "images/templates/home/caneta-fundo.png!bust", "image!" + $rootScope.baseURL + "images/templates/home/grafismo-center.png!bust", "image!" + $rootScope.baseURL + "images/templates/home/grafismo-left.png!bust", "image!" + $rootScope.baseURL + "images/templates/home/grafismo-right.png!bust", "image!" + $rootScope.baseURL + "images/templates/home/grafismo.png!bust", "image!" + $rootScope.baseURL + "images/templates/home/tampa-azul.png!bust", "image!" + $rootScope.baseURL + "images/templates/home/tampa-vermelha.png!bust"], function() {
    PartsService.query(function(parts) {
      var i, _i, _len;
      $rootScope.loaded();
      $scope.parts = parts;
      for (_i = 0, _len = parts.length; _i < _len; _i++) {
        i = parts[_i];
        if (i.subparts.length > 0) {
          $scope.subparts = i.subparts;
        }
      }
      return $scope.selectPart(parts[1]);
    });
  });
});

/* --------------------------------------------
     Begin premios.coffee
--------------------------------------------
*/


'use strict';

/**
 # @ngdoc function
 # @name bicseApp.controller:PremiosCtrl
 # @description
 # # PremiosCtrl
 # Controller of the bicseApp
*/


angular.module('bicseApp').controller('PremiosCtrl', function($scope, $rootScope) {
  var bloggers, temp_bloggers, timeBlogger;
  $scope.place = 'first';
  $rootScope.isHome = false;
  $rootScope.pageClass = 'premiacao';
  timeBlogger = null;
  bloggers = ['cid', 'pc', 'kefera'];
  temp_bloggers = bloggers.slice(0);
  $scope.$on('$destroy', function() {
    return clearTimeout(timeBlogger);
  });
  $scope.checkPlace = function(place) {
    return $scope.place = place;
  };
  $scope.showBlogger = function(blogger) {
    $('.blogger.intro').hide();
    $('.blogger.' + blogger).show();
    $rootScope.createMotio($('.blogger.' + blogger)[0], 15);
    clearTimeout(timeBlogger);
    return timeBlogger = setTimeout((function() {
      return $scope.sortBlogger();
    }), 5000);
  };
  $scope.sortBlogger = function() {
    var x;
    x = Math.floor(Math.random() * temp_bloggers.length);
    $scope.showBlogger(temp_bloggers[x]);
    temp_bloggers.splice(x, 1);
    if (temp_bloggers.length === 0) {
      return temp_bloggers = bloggers.slice(0);
    }
  };
  $scope.startMotio = function(delay) {
    var time, timeTower;
    if ($scope.place === 'first') {
      if (time !== void 0) {
        clearTimeout(time);
      }
      $('#txt-first').hide();
      time = setTimeout((function() {
        $('#txt-first').show();
        $rootScope.createMotio($('#txt-first')[0]);
        return clearTimeout(time);
      }), delay);
      if (timeTower !== void 0) {
        clearTimeout(timeTower);
      }
      $('.torre-eiffel').hide();
      timeTower = setTimeout((function() {
        $('.torre-eiffel').show();
        $rootScope.createMotio($('.torre-eiffel')[0]);
        return clearTimeout(timeTower);
      }), delay + 1200);
      $('.blogger.intro').hide();
      return timeBlogger = setTimeout((function() {
        return $scope.sortBlogger();
      }), delay + 2000);
    } else if ($scope.place === 'second') {
      if (time !== void 0) {
        clearTimeout(time);
      }
      $('#txt-second').hide();
      return time = setTimeout((function() {
        $('#txt-second').show();
        $rootScope.createMotio($('#txt-second')[0]);
        return clearTimeout(time);
      }), delay);
    } else if ($scope.place === 'third') {
      if (time !== void 0) {
        clearTimeout(time);
      }
      $('#txt-third').hide();
      return time = setTimeout((function() {
        $('#txt-third').show();
        $rootScope.createMotio($('#txt-third')[0]);
        return clearTimeout(time);
      }), delay);
    }
  };
  $rootScope.toggle = function($place) {
    clearTimeout(timeBlogger);
    $scope.place = $place;
    return $scope.startMotio(100);
  };
  return require(["image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-left-1.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-left-2.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-left-3.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-left.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-right-1.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-right-2.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-right-3.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-right.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/caneta-1.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/caneta-2.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/galao.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/gota.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/like.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/tampa-1.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/tampa-2.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/tampa-3.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/tampa.png!bust"], function() {
    $scope.startMotio(1000);
    $rootScope.loaded();
  });
});

/* --------------------------------------------
     Begin galeria.coffee
--------------------------------------------
*/


'use strict';

/**
 # @ngdoc function
 # @name bicseApp.controller:GaleriaCtrl
 # @description
 # # GaleriaCtrl
 # Controller of the bicseApp
*/


angular.module('bicseApp').controller('GaleriaCtrl', function($scope, $rootScope, PensService, $window) {
  var getPerPage, _attention, _like, _title, _type;
  _attention = 'ic-attention-large';
  _like = 'ic-like-large';
  _type = {
    "default": 'default',
    search: 'search'
  };
  _title = {
    search: 'Caneta BIC<sup>®</sup> não encontrada!',
    "default": 'Valeu pela ajuda!',
    error: 'Erro ao se conectar'
  };
  $scope.pen_id = null;
  $scope.page = 1;
  $scope.pens = [];
  $scope.friend = [];
  $scope.feedback = {
    icon: _attention,
    mensage: void 0,
    title: _title.search,
    type: 'default',
    isShow: true
  };
  getPerPage = function() {
    if ($rootScope.defineDevice() === 'mobile') {
      if ($window.innerWidth < 600) {
        return 3;
      } else {
        return 7;
      }
    } else {
      return 12;
    }
  };
  $scope.showFeedback = function(title, mensage, icon, type) {
    $scope.feedback.icon = icon;
    $scope.feedback.mensage = mensage;
    $scope.feedback.title = title;
    $scope.feedback.type = type;
    return $scope.feedback.isShow = true;
  };
  $scope.connectSocial = function(network) {
    hello.init({
      facebook: "503550976443355"
    });
    return hello.login(network, function(data) {
      if (data.error) {
        return $scope.showFeedback(_title.error, 'Você precisa estar conectado com o facebook', _attention, _type["default"]);
      } else {
        $scope.access_token = data.authResponse.access_token;
        return PensService.vote({
          action: 'vote',
          id: $scope.pen_id,
          facebook: $scope.access_token
        }, function(data) {
          if (data.error) {
            return $scope.showFeedback(_title["default"], 'Você já votou nessa BIC', _attention, _type["default"]);
          } else {
            return $scope.showFeedback(_title["default"], 'Seu voto foi contabilizado com sucesso', _like, _type["default"]);
          }
        });
      }
    });
  };
  $scope.vote = function(id) {
    $scope.pen_id = id;
    return $scope.connectSocial('facebook');
  };
  $scope.submitForm = function() {
    if ($scope.friend.name !== void 0) {
      return $scope.getPens($scope.friend.name);
    }
  };
  $scope.hideFeedback = function() {
    $scope.friend.name = void 0;
    return $scope.getPens();
  };
  $scope.changePage = function(sentido) {
    switch (sentido) {
      case 'next':
        $scope.page += 1;
        break;
      case 'prev':
        $scope.page -= 1;
    }
    return $scope.getPens();
  };
  $scope.verifyPage = function() {
    $scope.prevPage = Boolean($scope.pagination.page > 1);
    return $scope.nextPage = Boolean($scope.page < $scope.pagination.pages);
  };
  $scope.respondPens = function(pens, header) {
    $scope.showFeedback(_title.search, 'Procure pelo nome do seu amigo', _attention, _type.search);
    $scope.feedback.isShow = Boolean(pens.length === 0);
    $scope.pagination = angular.fromJson(header("X-Pagination"));
    $scope.pens = pens;
    return $scope.verifyPage();
  };
  $scope.getPens = function(q) {
    var params;
    if (q == null) {
      q = null;
    }
    params = {
      page: $scope.page,
      per_page: getPerPage()
    };
    if (q) {
      params.q = q;
    }
    return PensService.query(params, $scope.respondPens);
  };
  $scope.init = function() {
    return $scope.getPens();
  };
  require(["image!" + $rootScope.baseURL + "images/templates/galeria/bg-left.png!bust", "image!" + $rootScope.baseURL + "images/templates/galeria/bg-right.png!bust"], function() {
    $rootScope.loaded();
    $scope.init();
  });
  $rootScope.isHome = false;
  $rootScope.pageClass = 'galeria';
  return setTimeout((function() {
    return $('.section').removeClass('enter');
  }), 3500);
});

/* --------------------------------------------
     Begin videobic.coffee
--------------------------------------------
*/


'use strict';

/**
 # @ngdoc function
 # @name bicseApp.controller:VideobicCtrl
 # @description
 # # VideobicCtrl
 # Controller of the bicseApp
*/


angular.module('bicseApp').controller('VideoBicCtrl', function($scope, $rootScope) {
  var video;
  $scope.UserCuston = $rootScope.UserCuston;
  $scope.pen = {
    images: {
      tampinha: 'images/pen/default/tampinha.png',
      corpo: 'images/pen/default/corpo.png',
      ponta: 'images/pen/default/ponta.png',
      tampa: 'images/pen/default/tampa.png'
    }
  };
  $scope.elements = {
    pen: $('.custon-pen'),
    infos: $('.infos'),
    btPlay: $('.bt.play-video')
  };
  if ($rootScope.UserCuston.images.capful.image_vertical_url !== null) {
    $scope.pen.images.tampinha = $rootScope.UserCuston.images.capful.image_vertical_url;
  }
  if ($rootScope.UserCuston.images.body.image_vertical_url !== null) {
    $scope.pen.images.corpo = $rootScope.UserCuston.images.body.image_vertical_url;
  }
  if ($rootScope.UserCuston.images.nib.image_vertical_url !== null) {
    $scope.pen.images.ponta = $rootScope.UserCuston.images.nib.image_vertical_url;
  }
  if ($rootScope.UserCuston.images.cover.image_vertical_url !== null) {
    $scope.pen.images.tampa = $rootScope.UserCuston.images.cover.image_vertical_url;
  }
  $scope.onClickNext = function(event) {
    video.dispose();
    return $rootScope.changeRoute('/cadastro', event);
  };
  $scope.playVideo = function() {
    if (video !== void 0) {
      video.play();
      $scope.elements.pen.hide();
      $scope.elements.infos.hide();
      return $scope.elements.btPlay.hide();
    }
  };
  require(["image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-left-1.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-left-2.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-left-3.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-left.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-right-1.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-right-2.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-right-3.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-right.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/caneta-1.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/caneta-2.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/galao.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/gota.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/like.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/tampa-1.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/tampa-2.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/tampa-3.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/tampa.png!bust"], function() {
    $rootScope.loaded();
  });
  $rootScope.isHome = false;
  $rootScope.pageClass = 'customizacao-video';
  $scope.nameUser = $rootScope.UserCuston.user.name;
  $scope.elements.infos.hide();
  $scope.elements.btPlay.hide();
  $scope.elements.btPlay.click(function(e) {
    $scope.playVideo();
    return e.preventDefault();
  });
  video = videojs("video_conceito").ready(function() {
    return this.on("ended", function() {
      $scope.elements.pen.show();
      $scope.elements.infos.fadeIn('fast');
      return $scope.elements.btPlay.fadeIn('fast');
    });
  });
  return setTimeout((function() {
    return $scope.playVideo();
  }), 3500);
});

/* --------------------------------------------
     Begin cadastro.coffee
--------------------------------------------
*/


'use strict';

/**
 # @ngdoc function
 # @name bicseApp.controller:CadastroCtrl
 # @description
 # # CadastroCtrl
 # Controller of the bicseApp
*/


angular.module('bicseApp').controller('CadastroCtrl', function($scope, $rootScope, BloggersService, $timeout) {
  var box, carousel, changeCarousel, timeoutEnter, _bloggersSmall;
  carousel = null;
  box = {
    all: angular.element('.box'),
    cid: angular.element('.box.cid'),
    pc: angular.element('.box.pc'),
    kefera: angular.element('.box.kefera')
  };
  $rootScope.isHome = false;
  $rootScope.pageClass = 'cadastro';
  $scope.step = 'poll';
  $scope.subStep = 'social';
  $scope.motioEnd = false;
  $scope.bloggers = [];
  $rootScope.pen_id = null;
  $('#next-poll').hide();
  $scope.formCallBack = function() {};
  $scope.focusCallback = function(event) {};
  $scope.$on("$locationChangeStart", function(event, next, current) {
    return clearTimeout($scope.timeoutBlogger);
  });
  timeoutEnter = null;
  $scope.timeoutBlogger = 0;
  $scope.bloggers = ['cid', ' kefera', 'pc'];
  $scope.bloggersTemp = [];
  _bloggersSmall = $('.inner.cadastre .blogger.small');
  hello.on("auth.login", function(r) {
    return hello(r.network).api("/me").success(function(p) {
      $rootScope.UserCuston.user.name = p.name;
      $rootScope.UserCuston.user.email = p.email;
      $('#next-social').click();
      return $scope.changeView('cadastre', 'form');
    });
  });
  $scope.connectSocial = function(network) {
    hello.init({
      facebook: "503550976443355",
      twitter: "xaZ31nuEuFdlNwlmfOC5dOUcA",
      google: "1084181011489-otbk0va2ao5cst70j264blv8659ai790.apps.googleusercontent.com"
    });
    return hello.login(network, {
      scope: 'email'
    }, function(data) {
      if (data.error && $rootScope.UserCuston.user.name !== null) {
        $scope.errorsInput = [];
        $scope.errorsInput.push('Você precisa estar conectado com o ' + network);
        return $scope.showFeedback();
      }
    });
  };
  $scope.timelineBloggers = function() {
    if ($scope.step !== 'cadastre') {
      return clearTimeout($scope.timeoutBlogger);
    }
  };
  $scope.addClick = function() {
    return $('.box .infos').click(function() {
      var _blogger_name;
      _blogger_name = $(this).parent().attr('data-blogger');
      angular.forEach($scope.bloggers, (function(value, key) {
        if (value.slug.indexOf(_blogger_name) !== -1) {
          $scope.bloggerVote = value.slug.split('-')[0];
          return $rootScope.UserCuston.vote.blogger_id = value.id;
        }
      }));
      $('#next-poll').show();
      if ($(this).parent().hasClass('selected')) {
        return;
      }
      $('.box').each(function(key, value) {
        if ($(this).hasClass('selected')) {
          $scope.mouseLeave($(this));
          $(this).removeClass('selected');
          return $(this).find('.bt.radio').removeClass('selected');
        }
      });
      $(this).parent().find('.bt.radio').addClass('selected');
      return $(this).parent().addClass('selected');
    });
  };
  $scope.onClickBack = function(event) {
    switch ($scope.step) {
      case 'poll':
        return $rootScope.changeRoute('/video-bic', event);
      case 'cadastre':
        if ($scope.subStep === 'social') {
          return $scope.changeView('poll');
        } else {
          return $scope.changeView('cadastre', 'social');
        }
    }
  };
  $scope.addMouse = function() {
    $('.box .infos').mouseenter(function() {
      var blogger, bt, pen, smoke;
      pen = $(this).parent().find('.pen');
      blogger = $(this).parent().find('.blogger.intro');
      smoke = $(this).parent().find('.blogger.smoke');
      bt = $(this).parent().find('.bt.radio');
      bt.addClass('selected');
      pen.addClass('hover');
      blogger.hide();
      return pen.show();
    });
    return $('.box .infos').mouseleave(function() {
      if (!$(this).parent().hasClass('selected')) {
        return $scope.mouseLeave($(this).parent());
      }
    });
  };
  $scope.mouseLeave = function(el) {
    var blogger, bt, pen, smoke;
    pen = $(el).find('.pen');
    blogger = $(el).find('.blogger.intro');
    smoke = $(el).find('.blogger.smoke');
    bt = $(el).find('.bt.radio');
    bt.removeClass('selected');
    pen.removeClass('hover');
    blogger.show();
    smoke.hide();
    return $rootScope.createMotio(blogger[0], 15);
  };
  $scope.changeView = function($step, $subStep) {
    if ($subStep == null) {
      $subStep = void 0;
    }
    $('.section').addClass('enter');
    $scope.step = $step;
    if ($subStep !== void 0) {
      $scope.subStep = $subStep;
    }
    if ($scope.step === 'poll') {
      $('.section').css('min-height', '560px');
      $('.sidebar').css('left', '-100px');
      $rootScope.startTimeEnter(2000);
      $scope.introPoll(200);
    }
    if ($scope.step === 'cadastre' && $scope.subStep !== 'form') {
      $('.sidebar').css('left', '15px');
      $('.section').css('min-height', '580px');
      $rootScope.startTimeEnter(2000);
      $scope.introCadastre(800);
      $scope.introBlogger(0);
    }
    if ($scope.subStep === 'form') {
      $('.section').css('min-height', '700px');
    }
    if ($scope.step === 'share') {
      $('.sidebar').css('left', '15px');
      $rootScope.startTimeEnter(3000);
    }
    $scope.fixedClass = $scope.step + '-' + $scope.subStep;
    return $scope.timelineBloggers();
  };
  $scope.introBlogger = function(delay) {
    var timeBlogger;
    _bloggersSmall.hide();
    _bloggersSmall.removeClass('kefera cid pc');
    _bloggersSmall.addClass($scope.bloggerVote);
    if (timeBlogger !== void 0) {
      clearTimeout(timeBlogger);
    }
    return timeBlogger = setTimeout((function() {
      _bloggersSmall.show();
      $rootScope.createMotio(_bloggersSmall[0]);
      return clearTimeout(timeBlogger);
    }), delay);
  };
  $scope.introCadastre = function(delay) {
    var timeTower;
    if (timeTower !== void 0) {
      clearTimeout(timeTower);
    }
    $('.torre-eiffel').hide();
    return timeTower = setTimeout((function() {
      $('.torre-eiffel').show();
      $rootScope.createMotio($('.torre-eiffel')[0]);
      return clearTimeout(timeTower);
    }), delay + 900);
  };
  $scope.introPoll = function(delay) {
    var timeCid, timeMina, timePc, _cid, _kefera, _pc;
    _cid = $('.box .cid')[0];
    _pc = $('.box .pc')[0];
    _kefera = $('.box .kefera')[0];
    $(_cid).hide();
    $(_pc).hide();
    $(_kefera).hide();
    if (timeCid !== void 0) {
      clearTimeout(timeCid);
    }
    timeCid = setTimeout((function() {
      if (!box.cid.hasClass('selected')) {
        box.cid.show();
        $(_cid).show();
        $rootScope.createMotio(_cid, 15);
        return clearTimeout(timeCid);
      } else {
        return box.cid.fadeIn();
      }
    }), delay + 200);
    if (timePc !== void 0) {
      clearTimeout(timePc);
    }
    timePc = setTimeout((function() {
      if (!box.pc.hasClass('selected')) {
        box.pc.show();
        $(_pc).show();
        $rootScope.createMotio(_pc, 15);
        return clearTimeout(timePc);
      } else {
        return box.pc.fadeIn();
      }
    }), delay + 1000);
    if (timeMina !== void 0) {
      clearTimeout(timeMina);
    }
    return timeMina = setTimeout((function() {
      $scope.addMouse();
      if (!box.kefera.hasClass('selected')) {
        box.kefera.show();
        $(_kefera).show();
        $rootScope.createMotio(_kefera, 15);
        return clearTimeout(timeMina);
      } else {
        return box.kefera.fadeIn();
      }
    }), delay + 1800);
  };
  $scope.clickSubNav = function(index) {
    $('.subnav').find('li a.active').removeClass('active');
    return carousel.showPane(index);
  };
  changeCarousel = function(panel) {};
  $scope.initCarousel = function() {
    carousel = new Carousel('#container-slide', '.box', changeCarousel);
    return carousel.init();
  };
  $scope.gplusShare = function() {
    var title, url;
    url = 'http://zone130.doing4.me' + $rootScope.baseURL + '#/minha-bic/' + $rootScope.pen_id;
    title = 'Confira meu projeto no Concurso Cultural Bic-se e me ajude nessa disputa.';
    return window.open("https://plus.google.com/share?url=" + encodeURIComponent(url) + "&text=" + encodeURIComponent(title), "", "height=300, width=550, resizable=1");
  };
  $scope.twitterShare = function() {
    var title, url;
    url = 'http://zone130.doing4.me' + $rootScope.baseURL + '#/minha-bic/' + $rootScope.pen_id;
    title = 'Confira meu projeto no Concurso Cultural Bic-se e me ajude nessa disputa.';
    return window.open("https://twitter.com/intent/tweet?url=" + encodeURIComponent(url) + "&text=" + encodeURIComponent(title) + "&count=none/", "", "height=300, width=550, resizable=1");
  };
  $scope.facebookShare = function() {
    return FB.ui({
      method: 'feed',
      name: 'Descubra como concorrer a uma viagem para a França.',
      link: 'http://zone130.doing4.me/bic/bic-se/#/minha-bic/' + $rootScope.pen_id,
      picture: 'http://zone130.doing4.me/bic/bic-se/images/social/facebook/app-icon.jpg',
      caption: 'caption',
      description: 'Descubra como concorrer a uma viagem para a França. Confira meu projeto no Concurso Cultural Bic-se e me ajude nessa disputa.'
    });
  };
  $scope.clickShare = function(network) {
    return $scope[network + 'Share']();
  };
  $scope.clickVideo = function(event) {
    var route;
    route = '/minha-bic/' + $rootScope.pen_id;
    return $rootScope.changeRoute(route, event);
  };
  $scope.init = function() {
    $scope.addClick();
    return BloggersService.query(function(bloggers) {
      $rootScope.loaded();
      $scope.bloggers = bloggers;
      if ($rootScope.defineDevice() === 'desktop') {
        $scope.introPoll(1600);
      } else {
        $scope.initCarousel();
      }
      return $rootScope.startTimeEnter(3000);
    });
  };
  return require(["image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-left-1.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-left-2.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-left-3.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-left.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-right-1.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-right-2.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-right-3.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/bg-right.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/caneta-1.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/caneta-2.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/galao.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/gota.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/like.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/tampa-1.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/tampa-2.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/tampa-3.png!bust", "image!" + $rootScope.baseURL + "images/templates/comoparticipar/tampa.png!bust"], function() {
    $scope.init();
  });
});

/* --------------------------------------------
     Begin animatesprite.coffee
--------------------------------------------
*/


'use strict';

/**
 # @ngdoc directive
 # @name bicseApp.directive:animateSprite
 # @description
 # # animateSprite
*/


el = void 0;

angular.module('bicseApp').directive('animateSprite', function($rootScope) {
  return {
    restrict: 'A',
    controller: function($scope, $rootScope) {},
    link: function(scope, element, attrs) {
      var myFn;
      return myFn = function() {};
    }
  };
});

/* --------------------------------------------
     Begin minhabic.coffee
--------------------------------------------
*/


'use strict';

/**
 # @ngdoc function
 # @name bicseApp.controller:VideobicCtrl
 # @description
 # # VideobicCtrl
 # Controller of the bicseApp
*/


angular.module('bicseApp').controller('MinhaBicCtrl', function($scope, $rootScope, $routeParams, PensService) {
  var video;
  $scope.pen = [];
  $scope.access_token = '';
  $scope.showFeedback = function(mensagem) {
    var html;
    html = "<p><span class=\"line left\"></span>" + mensagem + "<span class=\"line right\"></span></p>";
    $('#feedback .wrap-text').html(html);
    return $('#feedback').show();
  };
  $scope.connectSocial = function(network) {
    hello.init({
      facebook: "503550976443355"
    });
    return hello.login(network, function(data) {
      if (data.error) {
        return $scope.showFeedback('Você precisa estar conectado com o facebook');
      } else {
        $scope.access_token = data.authResponse.access_token;
        return PensService.vote({
          action: 'vote',
          id: $scope.pen.id,
          facebook: $scope.access_token
        }, function(data) {
          if (data.error) {
            return $scope.showFeedback('Você já votou nessa BIC');
          } else {
            return $scope.showFeedback('Seu voto foi contabilizado com sucesso');
          }
        });
      }
    });
  };
  $scope.vote = function() {
    return $scope.connectSocial('facebook');
  };
  $scope.playVideo = function() {
    if (video !== void 0) {
      video.play();
      $('.custon-pen').hide('fast');
      $('.infos').hide('fast');
      return $('.play-video').hide('fast');
    }
  };
  $('#feedback .bt.close-small').click(function(e) {
    $('#feedback').hide();
    return e.preventDefault();
  });
  $rootScope.isHome = false;
  $rootScope.pageClass = 'minha-bic';
  PensService.get({
    id: $routeParams.id
  }, function(pen) {
    return $scope.pen = pen;
  });
  video = videojs("video_conceito").ready(function() {
    return this.on("ended", function() {
      $('.custon-pen').fadeIn('fast');
      $('.infos').fadeIn('fast');
      return $('.play-video').fadeIn('fast');
    });
  });
  return require(["image!" + $rootScope.baseURL + "images/templates/home/bg-base.png!bust", "image!" + $rootScope.baseURL + "images/templates/home/caneta-frente.png!bust", "image!" + $rootScope.baseURL + "images/templates/home/caneta-fundo.png!bust", "image!" + $rootScope.baseURL + "images/templates/home/grafismo-center.png!bust", "image!" + $rootScope.baseURL + "images/templates/home/grafismo-left.png!bust", "image!" + $rootScope.baseURL + "images/templates/home/grafismo-right.png!bust", "image!" + $rootScope.baseURL + "images/templates/home/grafismo.png!bust", "image!" + $rootScope.baseURL + "images/templates/home/tampa-azul.png!bust", "image!" + $rootScope.baseURL + "images/templates/home/tampa-vermelha.png!bust"], function() {
    return $rootScope.loaded();
  });
});

/* --------------------------------------------
     Begin place.coffee
--------------------------------------------
*/


'use strict';

/**
 # @ngdoc directive
 # @name bicseApp.directive:place
 # @description
 # # place
*/


angular.module('bicseApp').directive('place', function() {
  return {
    replace: false,
    restrict: 'A',
    link: function(scope, element, attrs) {
      attrs.$observe("ngShow", function(expr) {
        return scope.$watch((function() {
          return scope;
        }), function(value) {});
      });
      return attrs.$observe("ngHide", function(expr) {
        return scope.$watch((function() {
          return scope;
        }), function(value) {});
      });
    }
  };
});

/* --------------------------------------------
     Begin modal.coffee
--------------------------------------------
*/


'use strict';

/**
 # @ngdoc directive
 # @name bicseApp.directive:modal
 # @description
 # # modal
*/


angular.module('bicseApp').directive('modal', function($rootScope, $window, $timeout) {
  return {
    restrict: 'A',
    templateUrl: 'views/commom/modal.html',
    replace: false,
    link: function(scope, element, attrs) {
      var setScrollPane, timeoutId, _containerScroll, _window;
      timeoutId = null;
      _window = angular.element($window);
      _containerScroll = angular.element('.container-scroll');
      setScrollPane = function() {
        return $timeout.cancel(timeoutId);
      };
      $rootScope.opemModal = function(modal, $event) {
        setScrollPane();
        if ($event !== null) {
          $event.preventDefault();
        }
        $('.nav-main').removeClass('opem');
        $('.main-header .overlay').removeClass('active');
        $('#overlay').addClass('active');
        $rootScope.navMainIsOpem = false;
        $rootScope.navSocialIsOpem = false;
        $rootScope.modalType = modal;
        $rootScope.modalStatus = _opening;
        return timeoutId = $timeout(setScrollPane, 100);
      };
      $rootScope.closeModal = function($event) {
        if ($event !== null) {
          $event.preventDefault();
        }
        $('.main-header .overlay').removeClass('active');
        $('#overlay').removeClass('active');
        $rootScope.modalStatus = _closed;
        return $rootScope.modalType = void 0;
      };
      return _window.bind('resize', setScrollPane);
    }
  };
});

/* --------------------------------------------
     Begin videointro.coffee
--------------------------------------------
*/


'use strict';

/**
 # @ngdoc function
 # @name bicseApp.controller:VideointroCtrl
 # @description
 # # VideointroCtrl
 # Controller of the bicseApp
*/


angular.module('bicseApp').controller('VideoIntroCtrl', function($scope, $rootScope) {
  var firstScriptTag, player, tag, _interval;
  $scope.link_skip = $rootScope.link_skip;
  $scope.state_video = null;
  _interval = 0;
  player = null;
  $scope.clearInterval = function() {
    if (_interval !== 0) {
      return clearInterval(_interval);
    }
  };
  $scope.initInterval = function() {
    if (_interval === 0) {
      return _interval = setInterval(function() {
        var progress;
        progress = (player.getCurrentTime() / player.getDuration()) * 100;
        return $('.bars .playing-bar').css('width', progress);
      }, 200);
    }
  };
  $scope.$on('$destroy', function() {
    $(window).off('resize');
    return $scope.clearInterval();
  });
  $rootScope.delayOut = 0;
  $rootScope.app_section = $rootScope.pageClass = 'video-intro';
  $rootScope.loaded();
  $('.play-video').click(function() {
    $(this).toggleClass('paused');
    if ($scope.state_video === 2) {
      return player.playVideo();
    } else {
      return player.pauseVideo();
    }
  });
  if (typeof window.youtube_api_init === "undefined") {
    tag = document.createElement("script");
    tag.src = "https://www.youtube.com/iframe_api";
    firstScriptTag = document.getElementsByTagName("script")[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
  }
  if (typeof window.youtube_api_init !== 'undefined') {
    window.onYouTubeIframeAPIReady();
  }
  $scope.$on("$destroy", function() {
    player.destroy();
    return $('.videoContainer').hide();
  });
  window.onYouTubeIframeAPIReady = function() {
    player = new YT.Player("player", {
      height: "100%",
      width: "100%",
      enablejsapi: 1,
      playerVars: {
        enablejsapi: 1,
        showinfo: 0,
        controls: 0,
        allowFullScreen: "true",
        wmode: "transparent"
      },
      videoId: "xH9ZdJWWHcY",
      events: {
        onReady: $scope.onPlayerReady,
        onStateChange: $scope.onPlayerStateChange
      }
    });
    return window.youtube_api_init = 1;
  };
  $scope.onPlayerReady = function(event) {
    return event.target.playVideo();
  };
  $scope.onPlayerStateChange = function(event) {
    $scope.state_video = event.data;
    if ($scope.state_video === 1) {
      $scope.initInterval();
      return $('.play-video').removeClass('paused');
    } else if ($scope.state_video === 2) {
      $scope.clearInterval();
      return $('.play-video').addClass('paused');
    }
  };
  if ($rootScope.defineDevice() === 'desktop') {
    $(window).on('resize', function() {
      var new_w, w;
      w = $(window).width();
      if (w >= 1002) {
        new_w = $(window).width() - 320;
        return $('.bars').width(new_w);
      }
    });
  }
  return $(window).resize();
});

/* --------------------------------------------
     Begin formcadastre.coffee
--------------------------------------------
*/


'use strict';

/**
 # @ngdoc directive
 # @name bicseApp.directive:formCadastre
 # @description
 # # formCadastre
*/


angular.module('bicseApp').directive('formCadastre', function($rootScope, UserService) {
  return {
    replace: false,
    restrict: 'A',
    link: function(scope, element, attrs) {
      scope["class"] = {
        error: 'error',
        sucess: 'sucess'
      };
      scope.isValid = false;
      scope.lastInput = void 0;
      scope.regex = {
        email: new RegExp(/^((?!\.)[a-z0-9._%+-]+(?!\.)\w)@[a-z0-9-\.]+\.[a-z.]{2,5}(?!\.)\w$/i),
        empty: new RegExp(/[-_.a-zA-Z0-9]{3,}/),
        number: new RegExp(/^[0-9]{3,}$/),
        cep: new RegExp(/\d{5}\-\d{3}/),
        phone: new RegExp(/\(\d{2}\)\ \d{4}\-\d{4}/)
      };
      scope.errorsInput = '';
      scope.errors = {
        nome: {
          message: 'Preencha seu nome'
        },
        email: {
          message: 'Preencha seu e-mail corretamente'
        },
        cpf: {
          message: 'Preencha seu CPF corretamente'
        },
        cep: {
          message: 'Preencha seu CEP corretamente'
        },
        address: {
          message: 'Preencha seu endereço'
        },
        number: {
          message: 'Preencha o número'
        },
        phone: {
          message: 'Preencha seu telefone'
        },
        district: {
          message: 'Preencha seu bairro'
        },
        city: {
          message: 'Preencha sua cidade'
        },
        state: {
          message: 'Escolha seu estado'
        }
      };
      scope.testaCPF = function(strCPF) {
        var Resto, Soma, i;
        Soma = void 0;
        Resto = void 0;
        Soma = 0;
        if (strCPF === "00000000000") {
          return false;
        }
        i = 1;
        while (i <= 9) {
          Soma = Soma + parseInt(strCPF.substring(i - 1, i)) * (11 - i);
          i++;
        }
        Resto = (Soma * 10) % 11;
        if ((Resto === 10) || (Resto === 11)) {
          Resto = 0;
        }
        if (Resto !== parseInt(strCPF.substring(9, 10))) {
          return false;
        }
        Soma = 0;
        i = 1;
        while (i <= 10) {
          Soma = Soma + parseInt(strCPF.substring(i - 1, i)) * (12 - i);
          i++;
        }
        Resto = (Soma * 10) % 11;
        if ((Resto === 10) || (Resto === 11)) {
          Resto = 0;
        }
        if (Resto !== parseInt(strCPF.substring(10, 11))) {
          return false;
        }
        return true;
      };
      scope.number = function(input) {
        if ($(input).val().length > 0) {
          return scope.removeErrorsClass(input);
        } else {
          return scope.addErrorsClass(input);
        }
      };
      scope.text = function(input) {
        if (scope.regex.empty.test($(input).val())) {
          return scope.removeErrorsClass(input);
        } else {
          return scope.addErrorsClass(input);
        }
      };
      scope.email = function(input) {
        if (scope.regex.email.test($(input).val())) {
          return scope.removeErrorsClass(input);
        } else {
          return scope.addErrorsClass(input);
        }
      };
      scope.cpf = function(input) {
        var str;
        str = $(input).val().replace(/[^0-9]+/g, '');
        if (scope.testaCPF(str)) {
          return scope.removeErrorsClass(input);
        } else {
          return scope.addErrorsClass(input);
        }
      };
      scope.cep = function(input) {
        if (scope.regex.cep.test($(input).val())) {
          return scope.removeErrorsClass(input);
        } else {
          return scope.addErrorsClass(input);
        }
      };
      scope.phone = function(input) {
        if (scope.regex.phone.test($(input).val())) {
          return scope.removeErrorsClass(input);
        } else {
          return scope.addErrorsClass(input);
        }
      };
      scope.state = function(input) {
        if ($(input).val() !== '-') {
          return scope.removeErrorsClass(input);
        } else {
          return scope.addErrorsClass(input);
        }
      };
      scope.showFeedback = function() {
        var html;
        html = '';
        $(scope.errorsInput).each(function(index, value) {
          return html += "<p><span class=\"line left\"></span>" + value + "<span class=\"line right\"></span></p>";
        });
        $('#feedback .wrap-text').html(html);
        return $('#feedback').show();
      };
      scope.validator = function() {
        if (scope.errorsInput.length > 0) {
          scope.showFeedback();
          return scope.isValid = false;
        } else {
          scope.clearErrorsInput();
          return scope.isValid = true;
        }
      };
      scope.removeErrorsClass = function(input) {
        return $(input).removeClass(scope["class"].error);
      };
      scope.addErrorsClass = function(input) {
        scope.lastInput = input;
        scope.errorsInput.push(eval('scope.errors.' + $(input).attr('name') + '.message'));
        return $(input).addClass(scope["class"].error);
      };
      scope.clearErrorsInput = function() {
        return scope.errorsInput = [];
      };
      scope.required = function(input) {
        var _validateFunction;
        _validateFunction = $(input).attr('data-validate');
        switch (_validateFunction) {
          case 'text':
            scope.text(input);
            break;
          case 'email':
            scope.email(input);
            break;
          case 'cpf':
            scope.cpf(input);
            break;
          case 'cep':
            scope.cep(input);
            break;
          case 'phone':
            scope.phone(input);
            break;
          case 'state':
            scope.state(input);
        }
        return scope.validator();
      };
      scope.changeInput = function(input) {
        scope.clearErrorsInput();
        if ($(input).hasClass('required')) {
          return scope.required(input);
        }
      };
      scope.validateForm = function() {
        scope.errorsInput = [];
        $('.required').each(function(key, value) {
          var _validateFunction;
          _validateFunction = $(value).attr('data-validate');
          switch (_validateFunction) {
            case 'text':
              return scope.text(value);
            case 'email':
              return scope.email(value);
            case 'cpf':
              return scope.cpf(value);
            case 'cep':
              return scope.cep(value);
            case 'phone':
              return scope.phone(value);
            case 'state':
              return scope.state(value);
          }
        });
        return scope.validator();
      };
      $('.bt.opt-in').click(function(e) {
        e.preventDefault();
        return $(this).toggleClass('selected');
      });
      $('#feedback .bt.close-small').click(function(e) {
        if (scope.lastInput !== void 0) {
          $(scope.lastInput).focus();
        }
        $('#feedback').hide();
        scope.clearErrorsInput();
        return e.preventDefault();
      });
      $('input[name="phone"]').mask("(99) 9999-9999?9");
      $('input[name="cpf"]').mask("999.999.999-99");
      $('input[name="cep"]').mask("99999-999");
      $('input, select').on('change', function() {
        return scope.changeInput(this);
      });
      scope.user = $rootScope.UserCuston.user;
      return $(element).submit(function() {
        scope.validateForm();
        $rootScope.UserCuston.pen.name = scope.user.name;
        if (scope.isValid) {
          UserService.save({
            user: scope.user,
            vote: $rootScope.UserCuston.vote,
            pen: $rootScope.UserCuston.pen
          }, function(data) {
            if (data.error) {
              scope.errorsInput = data.messages;
              return scope.showFeedback();
            } else {
              $rootScope.pen_id = data.pen_id;
              return scope.changeView('share');
            }
          });
        }
        return false;
      });
    }
  };
});

/* --------------------------------------------
     Begin parts_service.coffee
--------------------------------------------
*/


'use strict';

/**
 # @ngdoc service
 # @name bicseApp.Parts
 # @description
 # # Parts
 # Factory in the bicseApp.
*/


angular.module('bicseApp').factory('PartsService', function($resource, $rootScope) {
  return $resource($rootScope.baseURL + "/api/parts/:action:id", {
    id: "@id",
    listCtrl: '@action'
  });
});

/* --------------------------------------------
     Begin pens_service.coffee
--------------------------------------------
*/


'use strict';

/**
 # @ngdoc service
 # @name bicseApp.Parts
 # @description
 # # Parts
 # Factory in the bicseApp.
*/


angular.module('bicseApp').factory('PensService', function($resource, $rootScope) {
  return $resource($rootScope.baseURL + "/api/pens/:id/:action", {
    id: "@id",
    action: '@action'
  }, {
    vote: {
      method: "POST",
      action: "vote",
      isArray: false
    }
  });
});

/* --------------------------------------------
     Begin session_service.coffee
--------------------------------------------
*/


'use strict';

/**
 # @ngdoc service
 # @name bicseApp.SessionService
 # @description
 # # SessionService
 # Service in the bicseApp.
*/


angular.module('bicseApp').service('Sessionservice', function() {
  var userIsAuthenticated;
  userIsAuthenticated = false;
  this.setUserAuthenticated = function(value) {
    userIsAuthenticated = value;
  };
  return this.getUserAuthenticated = function() {
    return userIsAuthenticated;
  };
});

/* --------------------------------------------
     Begin user_service.coffee
--------------------------------------------
*/


'use strict';

/**
 # @ngdoc service
 # @name bicseApp.user
 # @description
 # # user
 # Factory in the bicseApp.
*/


angular.module('bicseApp').factory('UserService', function($resource, $rootScope) {
  return $resource($rootScope.baseURL + "/api/users/:action:id", {
    id: "@id",
    listCtrl: '@action'
  });
});

/* --------------------------------------------
     Begin bloggers_service.coffee
--------------------------------------------
*/


'use strict';

/**
 # @ngdoc service
 # @name bicseApp.user
 # @description
 # # user
 # Factory in the bicseApp.
*/


angular.module('bicseApp').factory('BloggersService', function($resource, $rootScope) {
  return $resource($rootScope.baseURL + "/api/bloggers/:action:id", {
    id: "@id",
    listCtrl: '@action'
  });
});
